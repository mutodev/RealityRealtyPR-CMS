<?php

/**
 * BaseContract
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parent_id
 * @property integer $client_id
 * @property integer $option_client_id
 * @property integer $rent_client_id
 * @property integer $sale_client_id
 * @property integer $secondary_client_id
 * @property integer $account_id
 * @property integer $secondary_account_id
 * @property integer $tertiary_account_id
 * @property enum $type
 * @property timestamp $sale_at
 * @property decimal $sale_price
 * @property decimal $sale_deposit
 * @property decimal $sale_agreed
 * @property enum $sale_commission
 * @property decimal $sale_value
 * @property enum $by_owner_commission
 * @property decimal $by_owner_value
 * @property decimal $rent_price
 * @property decimal $rent_deposit
 * @property decimal $rent_agreed
 * @property timestamp $rent_start_at
 * @property timestamp $rent_end_at
 * @property timestamp $start_at
 * @property timestamp $end_at
 * @property timestamp $approved_at
 * @property enum $status
 * @property boolean $publish
 * @property string $failed_reason
 * @property timestamp $option_start_at
 * @property timestamp $option_end_at
 * @property decimal $option_deposit
 * @property boolean $is_cobroke
 * @property string $cobroke_name
 * @property string $cobroke_email
 * @property string $cobroke_phone
 * @property Account $Primary
 * @property Account $Secondary
 * @property Contract $Parent
 * @property Client $Client
 * @property Client $SecondaryClient
 * @property Client $OptionClient
 * @property Client $SaleClient
 * @property Client $RentClient
 * @property Doctrine_Collection $Property
 * @property Doctrine_Collection $Contract
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContract extends Doctrine_Record_Yammon
{
    public function setTableDefinition()
    {
        $this->setTableName('contract');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('parent_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'unsigned' => true,
             ));
        $this->hasColumn('client_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'unsigned' => true,
             ));
        $this->hasColumn('option_client_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'unsigned' => true,
             ));
        $this->hasColumn('rent_client_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'unsigned' => true,
             ));
        $this->hasColumn('sale_client_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'unsigned' => true,
             ));
        $this->hasColumn('secondary_client_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'unsigned' => true,
             ));
        $this->hasColumn('account_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'unsigned' => true,
             ));
        $this->hasColumn('secondary_account_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'unsigned' => true,
             ));
        $this->hasColumn('tertiary_account_id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'unsigned' => true,
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Exclusive',
              1 => 'Semi Exclusive',
              2 => 'Open',
              3 => 'Net Pay',
              4 => 'Special',
              5 => 'Rental',
              6 => 'Co-Broke',
              7 => 'Other',
             ),
             ));
        $this->hasColumn('sale_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('sale_price', 'decimal', 12, array(
             'type' => 'decimal',
             'length' => '12',
             'scale' => '2',
             ));
        $this->hasColumn('sale_deposit', 'decimal', 12, array(
             'type' => 'decimal',
             'length' => '12',
             'scale' => '2',
             ));
        $this->hasColumn('sale_agreed', 'decimal', 12, array(
             'type' => 'decimal',
             'length' => '12',
             'scale' => '2',
             ));
        $this->hasColumn('sale_commission', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Percentage',
              1 => 'Fixed',
             ),
             ));
        $this->hasColumn('sale_value', 'decimal', 12, array(
             'type' => 'decimal',
             'length' => '12',
             'scale' => '2',
             ));
        $this->hasColumn('by_owner_commission', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Percentage',
              1 => 'Fixed',
             ),
             ));
        $this->hasColumn('by_owner_value', 'decimal', 12, array(
             'type' => 'decimal',
             'length' => '12',
             'scale' => '2',
             ));
        $this->hasColumn('rent_price', 'decimal', 12, array(
             'type' => 'decimal',
             'length' => '12',
             'scale' => '2',
             ));
        $this->hasColumn('rent_deposit', 'decimal', 12, array(
             'type' => 'decimal',
             'length' => '12',
             'scale' => '2',
             ));
        $this->hasColumn('rent_agreed', 'decimal', 12, array(
             'type' => 'decimal',
             'length' => '12',
             'scale' => '2',
             ));
        $this->hasColumn('rent_start_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('rent_end_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('start_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('end_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('approved_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'Optioned',
              1 => 'Closed',
              2 => 'Failed',
              3 => 'Rented',
              4 => 'Current Listing',
              5 => 'Out of Market',
             ),
             ));
        $this->hasColumn('publish', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             'notnull' => false,
             ));
        $this->hasColumn('failed_reason', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('option_start_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('option_end_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('option_deposit', 'decimal', 12, array(
             'type' => 'decimal',
             'length' => '12',
             'scale' => '2',
             ));
        $this->hasColumn('is_cobroke', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('cobroke_name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('cobroke_email', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('cobroke_phone', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account as Primary', array(
             'local' => 'account_id',
             'foreign' => 'id'));

        $this->hasOne('Account as Secondary', array(
             'local' => 'secondary_account_id',
             'foreign' => 'id'));

        $this->hasOne('Contract as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id'));

        $this->hasOne('Client', array(
             'local' => 'client_id',
             'foreign' => 'id'));

        $this->hasOne('Client as SecondaryClient', array(
             'local' => 'secondary_client_id',
             'foreign' => 'id'));

        $this->hasOne('Client as OptionClient', array(
             'local' => 'option_client_id',
             'foreign' => 'id'));

        $this->hasOne('Client as SaleClient', array(
             'local' => 'sale_client_id',
             'foreign' => 'id'));

        $this->hasOne('Client as RentClient', array(
             'local' => 'rent_client_id',
             'foreign' => 'id'));

        $this->hasMany('Property', array(
             'local' => 'id',
             'foreign' => 'contract_id'));

        $this->hasMany('Contract', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}