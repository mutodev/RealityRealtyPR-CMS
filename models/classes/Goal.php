<?php

/**
 * Goal
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Goal extends BaseGoal
{
    public function getStats($month) {
        $summary = [];
        $data = [];

        $report = [
            'listings' => [
                'title' => t('Listings'),
                'date_field' => 'start_at',
            ],
            'options' => [
                'title' => t('Options'),
                'date_field' => 'option_start_at',
            ],
            'closings' => [
                'title' => t('Closings'),
                'date_field' => 'sale_at',
            ],
        ];

        foreach ($report as $name => $config) {
            $Query = new Doctrine_Query();
            $Query->from('Contract c');
            $Query->leftJoin('c.Property p');
            $Query->andWhere("c.{$config['date_field']} >= ?", "{$this->year}-{$month}-01 00:00:00");
            $Query->andWhere("c.{$config['date_field']} <= ?", "{$this->year}-{$month}-31 23:59:59");

            if ($this->account_id) {
                $Query->andWhere('c.account_id = ?', $this->account_id);
            }

            if ($this->production_unit_id) {
                $Query->andWhere('p.production_unit_id = ?', $this->production_unit_id);
            }

            $Query->andWhere('p.for_sale = 1');
            $Contracts = $Query->execute();

            $data[$name]['title'] = $config['title'];
            $data[$name]['total'] = $Contracts->count();
            $data[$name]['contracts'] = $Contracts;
            $data[$name]['goal'] = $this[$name];

            $summary[$month][$name] = [
                'total' => 0,
                'volume' => 0,
                'goal' => intval($this[$name] / 12),
                'goal_volume' => $this["{$name}_volume"],
                'title' => $config['title']
            ];

            if (in_array($name, ['listings', 'closings'])) {
                $summary[$month][$name]['goal_price_average'] += $this["{$name}_price_average"];
                $summary[$month][$name]['goal_commission_average'] += $this["{$name}_commission_average"];
            }

            foreach ($Contracts as $Contract) {

                if ($name === 'listings') {
                    $contractMonth = date('m', strtotime($Contract->start_at));
                    $summary[$contractMonth][$name]['volume'] += $Contract->Property[0]->sale_price;
                    $summary[$contractMonth][$name]['total']++;
                    $summary[$contractMonth][$name]['price_average'] = $summary[$contractMonth][$name]['volume'] / $summary[$contractMonth][$name]['total'];
                    $summary[$contractMonth][$name]['commission_average'] += $Contract->sale_value;
                } else if ($name === 'closings') {
                    $contractMonth = date('m', strtotime($Contract->sale_at));
                    $summary[$contractMonth][$name]['volume'] += $Contract->sale_agreed;
                    $summary[$contractMonth][$name]['total']++;
                    $summary[$contractMonth][$name]['price_average'] = $summary[$contractMonth][$name]['volume'] / $summary[$contractMonth][$name]['total'];
                    $summary[$contractMonth][$name]['commission_average'] += $Contract->sale_value;
                } else if ($name === 'options') {
                    $contractMonth = date('m', strtotime($Contract->option_start_at));
                    $summary[$contractMonth][$name]['volume'] += $Contract->option_deposit;
                    $summary[$contractMonth][$name]['total']++;
                    $summary[$contractMonth][$name]['average'] = $summary[$contractMonth][$name]['volume'] / $summary[$contractMonth][$name]['total'];
                }
            }
        }

        return $summary;
    }
}
